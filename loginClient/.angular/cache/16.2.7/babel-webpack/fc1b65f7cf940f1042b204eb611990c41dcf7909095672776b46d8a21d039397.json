{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ENDPOINTS } from '../rest-endpoint';\nimport { Validators } from '@angular/forms';\nlet ManageComponent = class ManageComponent {\n  constructor(http, modalService, fb) {\n    this.http = http;\n    this.modalService = modalService;\n    this.fb = fb;\n    this.existingUsers = [];\n    this.userExist = false;\n    this.userForm = this.fb.group({\n      userName: ['', Validators.required],\n      password: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      name: ['', Validators.required],\n      age: ['', [Validators.required, Validators.min(1)]],\n      dob: ['', Validators.required],\n      Admin: [false] //When updating user accounts we cant change account type so this value has no effect\n    });\n  }\n\n  ngOnInit() {\n    this.http.get(ENDPOINTS.GETALL).subscribe(data => {\n      this.existingUsers = data;\n      console.log(this.existingUsers);\n    });\n  }\n  editUser(userData) {\n    this.userData = userData;\n    this.userForm.get('userName')?.setValue(userData.userName);\n    this.userForm.get('password')?.setValue(userData.password);\n    this.userForm.get('email')?.setValue(userData.email);\n    this.userForm.get('name')?.setValue(userData.name);\n    this.userForm.get('age')?.setValue(userData.age);\n    this.userForm.get('dob')?.setValue(userData.dob);\n  }\n  open(content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title'\n    });\n  }\n  onSubmit(user) {\n    this.http.get(ENDPOINTS.CHECK + user.userName).subscribe(data => {\n      if (!data || this.userData.userName == user.userName) {\n        this.http.put(ENDPOINTS.UPDATE, user).subscribe(response => {\n          this.userData = response;\n        });\n      } else {\n        this.userExist = true;\n      }\n    });\n  }\n};\nManageComponent = __decorate([Component({\n  selector: 'app-manage',\n  templateUrl: './manage.component.html',\n  styleUrls: ['./manage.component.css']\n})], ManageComponent);\nexport { ManageComponent };","map":{"version":3,"names":["Component","ENDPOINTS","Validators","ManageComponent","constructor","http","modalService","fb","existingUsers","userExist","userForm","group","userName","required","password","email","name","age","min","dob","Admin","ngOnInit","get","GETALL","subscribe","data","console","log","editUser","userData","setValue","open","content","ariaLabelledBy","onSubmit","user","CHECK","put","UPDATE","response","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/shakilabandara/Desktop/LoginSystem/loginClient/src/app/manage/manage.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserDto } from '../dto/UserDto';\nimport { HttpClient } from '@angular/common/http';\nimport { ENDPOINTS } from '../rest-endpoint';\nimport { DataService } from '../services/data.service';\nimport { ModalDismissReasons, NgbDatepickerModule, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-manage',\n  templateUrl: './manage.component.html',\n  styleUrls: ['./manage.component.css']\n})\nexport class ManageComponent implements OnInit{\n\n  userForm!:FormGroup;\n  existingUsers: UserDto [] = [];\n  userData!: UserDto;\n  userExist: boolean = false;\n\n  constructor (\n    private http:HttpClient, \n    private modalService: NgbModal, \n    private fb:FormBuilder,\n    ){\n      this.userForm = this.fb.group({\n        userName: ['', Validators.required],\n        password: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        name: ['', Validators.required],\n        age: ['', [Validators.required, Validators.min(1)]],\n        dob: ['', Validators.required],\n        Admin:[false] //When updating user accounts we cant change account type so this value has no effect\n      });\n    }\n\n\n  ngOnInit(): void {\n    this.http.get<UserDto[]>(ENDPOINTS.GETALL).subscribe(\n      (data) => {\n        this.existingUsers = data;\n        console.log(this.existingUsers);\n      }\n    )\n  }\n\n  editUser(userData: UserDto){\n    this.userData=userData;\n     \n    this.userForm.get('userName')?.setValue(userData.userName);\n    this.userForm.get('password')?.setValue(userData.password);\n    this.userForm.get('email')?.setValue(userData.email);\n    this.userForm.get('name')?.setValue(userData.name);\n    this.userForm.get('age')?.setValue(userData.age);\n    this.userForm.get('dob')?.setValue(userData.dob);   \n\n  }\n\n  open(content: any) {\n\t\tthis.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' });\n\t}\n\n  onSubmit(user:UserDto){\n    this.http.get(ENDPOINTS.CHECK+user.userName).subscribe(\n      (data) => {\n        if (!data || (this.userData.userName==user.userName)){\n          this.http.put<UserDto>(ENDPOINTS.UPDATE,user).subscribe(\n            (response)=> {\n              this.userData=response;\n          })\n        }\n        else{\n          this.userExist=true;\n        }\n      }\n    )   \n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}