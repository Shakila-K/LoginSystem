{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ENDPOINTS } from '../rest-endpoint';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nclass NewUserComponent {\n  constructor(fb, http, router) {\n    this.fb = fb;\n    this.http = http;\n    this.router = router;\n    this.userExist = false;\n    this.userForm = this.fb.group({\n      userName: ['', Validators.required],\n      password: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      name: ['', Validators.required],\n      age: ['', [Validators.required, Validators.min(1)]],\n      dob: ['', Validators.required],\n      adminAcc: ['', Validators.required]\n    });\n  }\n  onSubmit(user) {\n    this.http.get(ENDPOINTS.CHECK + user.userName).subscribe(data => {\n      if (!data) {\n        this.http.post(ENDPOINTS.CREATE, user).subscribe(data => {\n          const currentUrl = this.router.url;\n          this.router.navigateByUrl('/', {\n            skipLocationChange: true\n          }).then(() => {\n            this.router.navigate([currentUrl]);\n          });\n        });\n      } else {\n        this.userExist = true;\n      }\n    });\n  }\n  static #_ = this.ɵfac = function NewUserComponent_Factory(t) {\n    return new (t || NewUserComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewUserComponent,\n    selectors: [[\"app-new-user\"]],\n    decls: 38,\n    vars: 1,\n    consts: [[1, \"content\"], [1, \"formClass\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"userName\"], [\"formControlName\", \"userName\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"existingName\"], [\"formControlName\", \"password\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"email\"], [\"formControlName\", \"email\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"name\"], [\"formControlName\", \"name\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"age\"], [\"formControlName\", \"age\", \"type\", \"number\", 1, \"form-control\"], [\"for\", \"dob\"], [\"formControlName\", \"dob\", \"type\", \"date\", 1, \"form-control\"], [\"formControlName\", \"adminAcc\", \"type\", \"checkbox\", \"name\", \"admin\"], [1, \"button-container\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function NewUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3, \"Add a New User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function NewUserComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit(ctx.userForm.value);\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"User Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementStart(9, \"label\", 6);\n        i0.ɵɵtext(10, \"User Name Already Exist\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 4);\n        i0.ɵɵtext(13, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 8);\n        i0.ɵɵtext(17, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 10);\n        i0.ɵɵtext(21, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\", 12);\n        i0.ɵɵtext(25, \"Age\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 3)(28, \"label\", 14);\n        i0.ɵɵtext(29, \"Date of Birth\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 3);\n        i0.ɵɵelement(32, \"input\", 16);\n        i0.ɵɵelementStart(33, \"label\", 14);\n        i0.ɵɵtext(34, \" Make this account an admin account\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 17)(36, \"button\", 18);\n        i0.ɵɵtext(37, \"Save Changes\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".content[_ngcontent-%COMP%]{\\n    width: 80vw;\\n    height: 100vh;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.formClass[_ngcontent-%COMP%]{\\n    width: 40%;\\n    \\n}\\n\\n.formClass[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{\\n    margin-top: 3vh;\\n}\\n\\n.formClass[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\n    width: 30vw;\\n}\\n\\n.button-container[_ngcontent-%COMP%]{\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmV3LXVzZXIvbmV3LXVzZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2IsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxVQUFVOztBQUVkOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0FBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnR7XG4gICAgd2lkdGg6IDgwdnc7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5mb3JtQ2xhc3N7XG4gICAgd2lkdGg6IDQwJTtcbiAgICBcbn1cblxuLmZvcm1DbGFzcyBkaXZ7XG4gICAgbWFyZ2luLXRvcDogM3ZoO1xufVxuXG4uZm9ybUNsYXNzIGlucHV0e1xuICAgIHdpZHRoOiAzMHZ3O1xufVxuXG4uYnV0dG9uLWNvbnRhaW5lcntcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { NewUserComponent };","map":{"version":3,"names":["Validators","ENDPOINTS","NewUserComponent","constructor","fb","http","router","userExist","userForm","group","userName","required","password","email","name","age","min","dob","adminAcc","onSubmit","user","get","CHECK","subscribe","data","post","CREATE","currentUrl","url","navigateByUrl","skipLocationChange","then","navigate","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","_2","selectors","decls","vars","consts","template","NewUserComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","NewUserComponent_Template_form_ngSubmit_4_listener","value","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/Users/shakilabandara/Desktop/LoginSystem/loginClient/src/app/new-user/new-user.component.ts","/Users/shakilabandara/Desktop/LoginSystem/loginClient/src/app/new-user/new-user.component.html"],"sourcesContent":["import { UserDto } from './../dto/UserDto';\nimport { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ENDPOINTS } from '../rest-endpoint';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-user',\n  templateUrl: './new-user.component.html',\n  styleUrls: ['./new-user.component.css']\n})\nexport class NewUserComponent {\n  userForm!:FormGroup;\n  userExist: boolean = false;\n\n  constructor(private fb:FormBuilder,private http:HttpClient,private router:Router){\n    this.userForm = this.fb.group({\n      userName: ['', Validators.required],\n      password: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      name: ['', Validators.required],\n      age: ['', [Validators.required, Validators.min(1)]],\n      dob: ['', Validators.required],\n      adminAcc:['', Validators.required]\n    });\n  }\n\n  onSubmit(user:any){\n      \n    this.http.get(ENDPOINTS.CHECK+user.userName).subscribe(\n      (data) => {\n        if(!data){\n          this.http.post(ENDPOINTS.CREATE,user).subscribe(\n            (data) => {\n              const currentUrl = this.router.url;\n              this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n              this.router.navigate([currentUrl]);\n              });\n            }  \n          )\n        }\n        else{\n          this.userExist=true;\n        }\n      }\n    )\n        \n  }\n\n\n  \n}\n","<div class=\"content\">\n    <div class=\"formClass\">\n        <h2>Add a New User</h2>\n        <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit(userForm.value)\">\n            <div class=\"form-group\">\n                <label for=\"userName\">User Name</label>\n                <input formControlName=\"userName\" type=\"text\" class=\"form-control\">\n                <label for=\"existingName\" >User Name Already Exist</label>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"userName\">Password</label>\n                <input formControlName=\"password\" type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input formControlName=\"email\" type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"name\">Name</label>\n                <input formControlName=\"name\" type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"age\">Age</label>\n                <input formControlName=\"age\" type=\"number\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"dob\">Date of Birth</label>\n                <input formControlName=\"dob\" type=\"date\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n                <input formControlName=\"adminAcc\" type=\"checkbox\" name=\"admin\">\n                <label for=\"dob\"> Make this account an admin account</label>   \n            </div>\n            <div class=\"button-container\">\n                <button type=\"submit\" class=\"btn btn-primary\">Save Changes</button>\n            </div>\n\n        </form>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}